Source: protobuf-c-rpc
Section: devel
Priority: optional
Maintainer: Robert Edmonds <edmonds@debian.org>
Build-Depends:
 debhelper (>= 10),
 libprotobuf-c-dev,
 pkg-config,
 protobuf-c-compiler,
Standards-Version: 4.2.0
Homepage: https://github.com/protobuf-c/protobuf-c
Vcs-Browser: https://salsa.debian.org/edmonds/protobuf-c
Vcs-Git: https://salsa.debian.org/edmonds/protobuf-c.git

Package: libprotobuf-c-rpc-dev
Architecture: any
Section: libdevel
Depends: libprotobuf-c-rpc1 (= ${binary:Version}), ${misc:Depends}
Breaks: protobuf-c-compiler (<< 1.0.0~)
Multi-Arch: same
Description: Protocol Buffers C static library and headers (protobuf-c)
 Protocol Buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 This is the "protobuf-c" implementation of Protocol Buffers in C.
 .
 This package contains the static library and development headers.

Package: libprotobuf-c-rpc1
Architecture: any
Section: libs
Depends: ${misc:Depends}, ${shlibs:Depends}
Multi-Arch: same
Description: Protocol Buffers C shared library (protobuf-c)
 Protocol Buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 This is the "protobuf-c" implementation of Protocol Buffers in C.
 .
 This package contains the shared library.
